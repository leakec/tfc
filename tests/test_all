#!/bin/bash

# This script runs all of the non-machine learning cases in examples

# Get number of processes to run in parallel
num_procs=1
while [[ $# -gt 0 ]]; do
  case $1 in
    -j)
      num_procs="$2"
      shift # past argument
      shift # past value
      ;;
    -*|--*)
      echo "Unknown option $1"
      exit 1
      ;;
    *)
      echo "Unknown option $1"
      exit 1
      ;;
  esac
done

# Collect all of the test cases
# SKIP_TESTS are test cases that don't have tensorflow in their imports, but
# use files that do.
ALL_TESTS=`find ../examples -name "*.py" | xargs grep -Li tensorflow`
HIGH_MEM=("../examples/Carl_Leake_Dissertation/Chapter_4/WaveEquation/WaveEquation2D.py") # This one has more than 7 GB, so will likely fail when run on a git runner
SKIP_TESTS=("../examples/Carl_Leake_Dissertation/Chapter_3/Example_3_4.py")
SKIP_TESTS+=(${HIGH_MEM[@]})
CD=`pwd`

# Function to run a test
run_test ()
{
	TEST=$1
	DIR="$(dirname "${TEST}")" ; FILE="$(basename "${TEST}")"
	cd $DIR
	TEMPFILE=`mktemp`
	if ! python $FILE 2> $TEMPFILE; then
		echo $TEST failed!
		cat $TEMPFILE
		echo 
    else
        echo $TEST success!
        echo
	fi
}

# Variable to store the number of running jobs
num_jobs="\j"

# Run all of the jobs
for TEST in ${ALL_TESTS[@]}; do
	if [[ " ${SKIP_TESTS[*]} " =~ " ${TEST} " ]]; then
		echo Skipping $TEST
	else
		while (( ${num_jobs@P} >= num_procs )); do
			wait -n
		done
		run_test $TEST &
	fi
done
wait
for TEST in ${HIGH_MEM[@]}; do
	run_test $TEST
done
